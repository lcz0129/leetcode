# Definition for singly-linked list.
class ListNode(object):
    def __init__(self, x):
        self.val = x
        self.next = None

class Solution(object):
	def addnumbers(self,l1,l2,carry,node):
		if l1 is None and l2 is None:
			return
		if l1 is None:
			if carry is 0:
				node.next=l2
				return
			if carry is not 0:
				res,car=basicadd(0,l2.val,carry)
				node.next=ListNode(res)
				addnumbers(self,l1,l2.next,car,node.next)


	def basicadd(num1,num2,carry):
		res=num1+num2+carry;
		if res >= 10:
			res=res-10;
			return res,1;
		return res,0;

    def addTwoNumbers(self, l1, l2):
    	retnode=ListNode;
    	addnumbers(self,l1,l2,0,retnode);
    	return retnode;

        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """



a = ListNode(1)
a.next=ListNode(2)

def readval(linklist):
	if linklist.next is not None:
		readval(linklist.next)
	print linklist.val

readval(a)